(local-include "../lib/sockets.h")

(register-type Socket)

(defmodule Socket
  (register buf-size Int)
  (register setup-client (Fn [&String Int] Socket))
  (register setup-server (Fn [&String Int] Socket))
  (register listen (Fn [&Socket] ()))
  (register accept (Fn [&Socket] Socket))
  (register send (Fn [&Socket &String] ()))
  (register read (Fn [&Socket] String))
  (register close (Fn [&Socket] ()))

  (defmacro with-client [name host port :rest forms]
    (list 'let (array name (list 'ref (list 'Socket.setup-client host port)))
      (cons-last (list 'Socket.close name) (cons 'do forms))))

  (defmacro with-server [name host port :rest forms]
    (list 'let (array name (list 'Socket.setup-server host port))
      (cons-last (list 'Socket.close (list 'ref name)) (cons 'do forms))))

  (defmacro with-connection [from to :rest forms]
    (list 'do (list 'listen (list 'ref from))
      (list 'let (array to (list 'accept (list 'ref from)))
        (cons-last (list 'Socket.close (list 'ref to)) (cons 'do forms)))))

  (defmacro while-connection [from to :rest forms]
    (list 'do (list 'listen (list 'ref from))
      (list 'while true
        (list 'let (array to (list 'accept (list 'ref from)))
          (cons-last (list 'Socket.close (list 'ref to)) (cons 'do forms))))))
)
